{% set version = "15.0.1" %}
{% set prod_ver = '.'.join(version.split('.')[:3]) %}

package:
  name: compiler-rt-packages
  version: {{ version }}

source:
  url: https://github.com/llvm/llvm-project/releases/download/llvmorg-{{ version.replace(".rc", "-rc") }}/llvm-project-{{ version.replace(".rc", "rc") }}.src.tar.xz
  sha256: f25ce2d4243bebf527284eb7be7f6f56ef454fca8b3de9523f7eb4efb8d26218
  patches:
    - patches/0001-no-code-sign.patch
    - patches/0002-compiler-rt-Make-7.0.0-compatible-with-10.9-SDK.patch
    - patches/0003-set-cmake-paths.patch
    - patches/0004-guard-use-of-FP_XSTATE_MAGIC1-based-on-glibc-version.patch

build:
  number: 0

requirements:
  build:
    - cmake >=3.4.3
    - {{ compiler('cxx') }}
    - python *
    - make  # [unix]
    - llvmdev {{ version }}  # [build_platform != target_platform]
  host:
    - clangdev {{ version }}
    - llvmdev {{ version }}
    - libcxx   # [osx]

outputs:
  - name: compiler-rt_{{ target_platform }}
    build:
      noarch: generic
      ignore_run_exports:
        - vc
        - libcxx
        - libgcc-ng
        - libstdcxx-ng
      detect_binary_files_with_prefix: false  # [win]
    requirements:
      build:
        - {{ compiler('cxx') }}
      host:
      run:
        - clang {{ version }}
        - clangxx {{ version }}
      run_constrained:
        - compiler-rt {{ version }}
    files:
      - lib/clang/{{ prod_ver }}/lib
    test:
      commands:
        - echo {{ MACOSX_DEPLOYMENT_TARGET|default("10.9") }}
        - test -f $PREFIX/lib/clang/{{ prod_ver }}/lib/darwin/libclang_rt.osx.a  # [osx]

  - name: compiler-rt
    requirements:
      build:
        - {{ compiler('cxx') }}
      host:
      run:
        - clang {{ version }}
        - clangxx {{ version }}
        - compiler-rt_{{ target_platform }} {{ version }}
    files:
      - lib/clang/{{ prod_ver }}/share             # [unix]
      - lib/clang/{{ prod_ver }}/include           # [unix]
      - Library/lib/clang/{{ version }}/share     # [win]
      - Library/lib/clang/{{ version }}/include   # [win]
      - Library/lib/clang/{{ version }}/lib       # [win]
    #test:
    #  files:
    #    - test.c.in
    #  commands:
    #  {% set NEW_TARGET="10." ~ (((MACOSX_DEPLOYMENT_TARGET|default("10.13")).split(".")[1])|int + 1) %}
    #    - sed "s/@MACOSX_DEPLOYMENT_TARGET@/{{ NEW_TARGET }}/g" test.c.in > test.c
    #    - clang -mmacosx-version-min={{ MACOSX_DEPLOYMENT_TARGET }} test.c  # [osx]
    #    - test -f $PREFIX/lib/clang/{{ prod_ver }}/include/sanitizer/asan_interface.h  # [unix]

about:
  home: http://llvm.org/
  license: Apache-2.0 WITH LLVM-exception
  license_file: compiler-rt/LICENSE.TXT
  summary: compiler-rt runtime libraries
  dev_url: https://github.com/llvm/llvm-project
  description: |
    builtins - low-level target-specific hooks required by code generation and other
      runtime components
    sanitizer runtimes - AddressSanitizer, ThreadSanitizer, UndefinedBehaviorSanitizer,
      MemorySanitizer, LeakSanitizer, DataFlowSanitizer
    profile - library which is used to collect coverage information
    BlocksRuntime - target-independent implementation of Apple "Blocks" runtime
      interfaces

extra:
  recipe-maintainers:
    - SylvainCorlay
    - inducer
    - jakirkham
    - isuruf
    - h-vetinari
  feedstock-name: compiler-rt
