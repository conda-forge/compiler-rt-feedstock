From df12de3c3a271638a55950feb9c57c7f95b8509b Mon Sep 17 00:00:00 2001
From: Isuru Fernando <isuruf@gmail.com>
Date: Mon, 22 Apr 2019 02:00:30 -0500
Subject: [PATCH] no code sign

---
 compiler-rt/cmake/Modules/AddCompilerRT.cmake | 31 -------------------
 1 file changed, 31 deletions(-)

diff --git a/compiler-rt/cmake/Modules/AddCompilerRT.cmake b/compiler-rt/cmake/Modules/AddCompilerRT.cmake
index 298093462f80..52dc54979056 100644
--- a/compiler-rt/cmake/Modules/AddCompilerRT.cmake
+++ b/compiler-rt/cmake/Modules/AddCompilerRT.cmake
@@ -387,37 +387,6 @@ function(add_compiler_rt_runtime name type)
         set_target_properties(${libname} PROPERTIES IMPORT_PREFIX "")
         set_target_properties(${libname} PROPERTIES IMPORT_SUFFIX ".lib")
       endif()
-      if (APPLE AND NOT CMAKE_LINKER MATCHES ".*lld.*")
-        # Apple's linker signs the resulting dylib with an ad-hoc code signature in
-        # most situations, except:
-        # 1. Versions of ld64 prior to ld64-609 in Xcode 12 predate this behavior.
-        # 2. Apple's new linker does not when building with `-darwin-target-variant`
-        #    to support macOS Catalyst.
-        #
-        # Explicitly re-signing the dylib works around both of these issues. The
-        # signature is marked as `linker-signed` when that is supported so that it
-        # behaves as expected when processed by subsequent tooling.
-        #
-        # Detect whether `codesign` supports `-o linker-signed` by passing it as an
-        # argument and looking for `invalid argument "linker-signed"` in its output.
-        # FIXME: Remove this once all supported toolchains support `-o linker-signed`.
-        execute_process(
-          COMMAND sh -c "codesign -f -s - -o linker-signed this-does-not-exist 2>&1 | grep -q linker-signed"
-          RESULT_VARIABLE CODESIGN_SUPPORTS_LINKER_SIGNED
-        )
-
-        set(EXTRA_CODESIGN_ARGUMENTS)
-        if (CODESIGN_SUPPORTS_LINKER_SIGNED)
-          list(APPEND EXTRA_CODESIGN_ARGUMENTS -o linker-signed)
-        endif()
-
-        add_custom_command(TARGET ${libname}
-          POST_BUILD
-          COMMAND codesign --sign - ${EXTRA_CODESIGN_ARGUMENTS} $<TARGET_FILE:${libname}>
-          WORKING_DIRECTORY ${COMPILER_RT_OUTPUT_LIBRARY_DIR}
-          COMMAND_EXPAND_LISTS
-        )
-      endif()
     endif()
 
     set(parent_target_arg)
